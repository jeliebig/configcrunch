# See the Rust source code for docstrings, query them via Python or see the documentation..
from abc import abstractmethod
from typing import List, Callable, Type, Optional, Union

from schema import Schema

from configcrunch import variable_helper


class ConfigcrunchError(Exception): ...
class ReferencedDocumentNotFound(ConfigcrunchError): ...
class CircularDependencyError(ConfigcrunchError): ...
class VariableProcessingError(ConfigcrunchError): ...
class InvalidDocumentError(ConfigcrunchError): ...
class InvalidHeaderError(InvalidDocumentError):...
class InvalidRemoveError(InvalidDocumentError): ...


def load_subdocument(
        doc: 'Union[dict, YamlConfigDocument]',
        source_doc: 'YamlConfigDocument',
        doc_clss: 'Type[YamlConfigDocument]',
        lookup_paths: List[str],
) -> Optional['YamlConfigDocument']:
    ...
def merge_documents(target: 'YamlConfigDocument', source: 'YamlConfigDocument') -> None: ...


class YamlConfigDocument:
    @property
    def doc(self) -> dict: ...
    @property
    def path(self) -> Optional[str]: ...
    @property
    def parent_doc(self) -> Optional['YamlConfigDocument']: ...
    @property
    def absolute_paths(self) -> List[str]: ...
    @classmethod
    def from_yaml(cls, path_to_yaml: str) -> 'YamlConfigDocument': ...
    @classmethod
    def from_dict(cls, dict: dict) -> 'YamlConfigDocument': ...
    @classmethod
    @abstractmethod
    def header(cls) -> str: ...
    @classmethod
    @abstractmethod
    def schema(cls) -> Schema: ...
    def validate(self) -> bool: ...
    def _initialize_data_after_merge(self): ...
    def _initialize_data_after_variables(self): ...
    def resolve_and_merge_references(self, lookup_paths: List[str]) -> 'YamlConfigDocument': ...
    def _load_subdocuments(self, lookup_paths: List[str]): ...
    def process_vars(self) -> 'YamlConfigDocument': ...
    def process_vars_for(self, target: str, additional_helpers: List[Callable] = None) -> str: ...
    @variable_helper
    def parent(self) -> Optional['YamlConfigDocument']: ...
    def __repr__(self) -> str: ...
    def __str__(self): ...
    def error_str(self) -> str: ...
    def __len__(self): ...
    def __getitem__(self, key): ...
    def __setitem__(self, key, value): ...
    def __delitem__(self, key): ...
    def __iter__(self): ...
    def items(self): ...
    def to_dict(self): ...


class DocReference:
    def __init__(self, referenced_doc_type: Type[YamlConfigDocument]): ...
    def validate(self, data): ...
